library(ggplot2)
library(dplyr)
library(here)
library(tidyverse)
library(readxl)
library(writexl)
library(stringr)
#####read in MSD data
df <- readxl::read_xlsx(here::here("01_raw-data", "RATPIg", "MSD", "COVAIL_RATPIgMSD_FullDataSet_KJG_RM.xlsx"), sheet = "Data") |>
filter(!str_detect(`RATPIg Well`, "(blank)|(VRC01)|(Positive)")) %>%
mutate(CorrectedBoost = case_when(`Boost Type` %in% c("Proto+BA1", "Prototype+BA.1") ~ "BA.1",
TRUE ~ `Boost Type`))
threshold = 20000
filtered_df <- df |>
filter(`Omicron BA.1`>= threshold, !(`Donor ID` == 205772412 & `MSD Date` == as.Date("2024-12-20"))) |>
mutate(`Donor ID` = as.character(`Donor ID`))
library(ggplot2)
library(dplyr)
library(here)
library(tidyverse)
library(readxl)
library(writexl)
library(stringr)
#####read in MSD data
df <- readxl::read_xlsx(here::here("01_raw-data", "RATPIg", "MSD", "COVAIL_RATPIgMSD_FullDataSet_KJG_RM.xlsx"), sheet = "Data") |>
filter(!str_detect(`RATPIg Well`, "(blank)|(VRC01)|(Positive)")) %>%
mutate(CorrectedBoost = case_when(`Boost Type` %in% c("Proto+BA1", "Prototype+BA.1") ~ "BA.1",
TRUE ~ `Boost Type`))
threshold = 20000
filtered_df <- df |>
filter(`Omicron BA.1`>= threshold, !(`Donor ID` == 205772412 & `MSD Date` == as.Date("2024-12-20"))) |>
mutate(`Donor ID` = as.character(`Donor ID`))
labels <- filtered_df |>
mutate(BindingPopulation = case_when((`Omicron BA.1` >= threshold) & (Prototype >= `Omicron BA.1`*0.2) & (`Omicron XBB` >= `Omicron BA.1`*0.2) & (`JN1` >= `Omicron BA.1`*0.2) ~ "Fully Cross-Reactive",
`Omicron BA.1` >= threshold & Prototype >= `Omicron BA.1`*0.2 & `Omicron XBB` >= `Omicron BA.1`*0.2 ~ "P+B+X+J-",
`Omicron BA.1` >= threshold & Prototype >= `Omicron BA.1`*0.2 & `JN1` >= `Omicron BA.1`*0.2 ~ "P+B+X-J+",
`Omicron BA.1` >= threshold & Prototype >= `Omicron BA.1`*0.2 ~ "P+B+X-J-",
`Omicron XBB` >= `Omicron BA.1`*0.2 & `JN1` >= 0.2*`Omicron BA.1` ~ "P-B+X+J+",
`Omicron XBB` >= `Omicron BA.1`*0.2  ~ "P-B+X+J-",
`JN1` >= 0.2*`Omicron BA.1` ~ "P-B+X-J+",
`Omicron BA.1` >= threshold ~ "BA.1-specific",
TRUE ~ "Woopsies"),
BindingPopulation = factor(BindingPopulation, levels = c("Fully Cross-Reactive", "P+B+X+J-", "P+B+X-J+", "P+B+X-J-", "P-B+X+J+", "P-B+X+J-", "P-B+X-J+", "BA.1-specific")),
WellBarcode = paste0(`Donor ID`,"_", `RATPIg Well`))
#read in and append the neutralization data
neutralization <- read_xlsx(here::here("01_raw-data", "RATPIg", "Neut", "COVAIL RATPIG SUP SARSNeut_Binding_IgG DataUpdated20250205.xlsx")) %>%
mutate(`SampleSourcePlateWell ID` = str_remove(`SampleSourcePlateWell ID`,"(?<=[A-H])0"),
WellBarcode = paste0(SampleSourcePlateID, "_", `SampleSourcePlateWell ID`))
#merge the MSD and neut data
thresholdN <- 0.5
merged <- left_join(labels, neutralization, by = "WellBarcode") %>%
mutate(NeutralizingPopulations = case_when(D614G >= thresholdN & BA.1 >= thresholdN & `XBB.1.5` >= thresholdN & `JN.1` >= thresholdN ~ "P+B+X+J+",
D614G >= thresholdN & BA.1 >= thresholdN & `XBB.1.5` >= thresholdN ~ "P+B+X+J-",
D614G >= thresholdN & BA.1 >= thresholdN & `JN.1` >= thresholdN ~ "P+B+X-J+",
D614G >= thresholdN & BA.1 >= thresholdN ~ "P+B+X-J-",
D614G >= thresholdN ~ "P+B-X-J-",
BA.1 >= thresholdN & `XBB.1.5` >= thresholdN & `JN.1` >= thresholdN ~ "P-B+X+J+",
BA.1 >= thresholdN & `XBB.1.5` >= thresholdN ~ "P-B+X+J-",
BA.1 >= thresholdN & `JN.1` >= thresholdN ~ "P-B+X-J+",
BA.1 >= thresholdN ~ "P-B+X-J-",
`XBB.1.5` >= thresholdN & `JN.1` >= thresholdN ~ "P-B-X+J+",
`XBB.1.5` >= thresholdN ~ "P-B-X+J-",
`JN.1` >= thresholdN ~ "P-B-X-J+",
TRUE ~ "Non-Neutralizing"))
#####prepare sequencing+binding dataset
smartseqData <- read.csv(here::here("04_Analysis", "data_objects", "figure_testing", "testing_ratpig_inclusion", "MergedCiteSeqAndSmartSeqSequences.csv")) %>%
mutate(sample = paste0(str_extract(subject_id ,"[0-9]+"), "_", str_remove(Well_ID, "(?<=[A-H])0(?=[1-9])")),
WellBarcode = sample)
#####prepare sequencing+binding dataset
smartseqData <- read.csv(here::here("04_Analysis", "data_objects", "figure_testing", "testing_ratpig_inclusion", "MergedCiteSeqAndSmartSeqSequences_rbdneg.csv")) %>%
mutate(sample = paste0(str_extract(subject_id ,"[0-9]+"), "_", str_remove(Well_ID, "(?<=[A-H])0(?=[1-9])")),
WellBarcode = sample)
#merge binding data into citeseq
combinedData <- smartseqData %>% left_join(., merged, by = "WellBarcode")
#add in IgG data
igg <- read_xlsx(here::here("01_raw-data", "RATPIg", "COVAIL_Interpolated_IgGMSD_data.xlsx")) %>% filter(!is.na(Dilution_fold)) %>%
mutate(WellBarcode = paste0(Donor, "_", WellID))
warnings()
View(igg)
#merge into the combined data
overlapIgg <- combinedData %>%
mutate(IgGQuant = case_when(Dataset == "CITESeq" ~ NA,
TRUE ~ igg$CalculatedConcentration[match(.$WellBarcode, igg$WellBarcode)]))
#write xlsx of CITESeq + MSD + neuts
write_xlsx(overlapIgg, here::here("04_Analysis", "data_objects", "figure_testing", "testing_ratpig_inclusion", "CombinedMSD_Neut_Smartseq_OverlappingCITESeq.xlsx"))
#load the dependencies
library(Seurat)
library(ggplot2)
library(dplyr)
library(here)
library(tidyverse)
library(stringr)
library(writexl)
library(readxl)
library(tidyseurat)
#make the necessary changes to the probe labels based on both the MSD data and the CITESeq data
msd <- read_xlsx(here::here("04_Analysis", "data_objects", "figure_testing", "testing_ratpig_inclusion", "CombinedMSD_Neut_Smartseq_OverlappingCITESeq.xlsx"))
mab <- read.csv(here::here("01_raw-data", "mAbMSD", "mAb_CITESeq_QC_Criteria.csv")) %>% select(!X)
mabLabelled <- mab %>%
mutate(ProbeBinding = case_when(`WA.1` >= 1000000 & (`BA.1` >= 500000 | `XBB` >= 500000) ~ "Proto+Omi+",
`WA.1` >= 1000000 & !(`BA.1` >= 500000 | `XBB` >= 500000) ~ "Proto+Omi-",
!(`WA.1` >= 1000000) & (`BA.1` >= 500000 | `XBB` >= 500000) ~ "Proto-Omi+",
TRUE ~ "Proto-Omi-"))
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")) %>%
select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation) %>%
filter(ProbeBinding != "Smartseq Only") %>%
group_by(clone_subgroup_id) %>%
mutate(Specificity = case_when("SmartSeq" %in% Dataset ~ ProbeBinding[Dataset == "SmartSeq"][1],
"CITESeq with mAb Data" %in% Dataset ~ ProbeBinding[Dataset == "CITESeq with mAb Data"][1],
TRUE ~ ProbeBinding))
msd$adj.ProtoOmi
table(msd$adj.ProtoOmi, msd$Dataset)
#read in seurat object
seuObj <- readRDS(file=here::here("04_Analysis", "data_objects", "04_probe", "CoVSeuratObj_VDJCSOGEX_SpecificitiesLabelled_CloneCorrected.rds"))
#make the necessary changes to the probe labels based on both the MSD data and the CITESeq data
msd <- read_xlsx(here::here("04_Analysis", "data_objects", "figure_testing", "testing_ratpig_inclusion", "CombinedMSD_Neut_Smartseq_OverlappingCITESeq.xlsx"))
mab <- read.csv(here::here("01_raw-data", "mAbMSD", "mAb_CITESeq_QC_Criteria.csv")) %>% select(!X)
mabLabelled <- mab %>%
mutate(ProbeBinding = case_when(`WA.1` >= 1000000 & (`BA.1` >= 500000 | `XBB` >= 500000) ~ "Proto+Omi+",
`WA.1` >= 1000000 & !(`BA.1` >= 500000 | `XBB` >= 500000) ~ "Proto+Omi-",
!(`WA.1` >= 1000000) & (`BA.1` >= 500000 | `XBB` >= 500000) ~ "Proto-Omi+",
TRUE ~ "Proto-Omi-"))
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")) %>%
select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation) %>%
filter(ProbeBinding != "Smartseq Only") %>%
group_by(clone_subgroup_id) %>%
mutate(Specificity = case_when("SmartSeq" %in% Dataset ~ ProbeBinding[Dataset == "SmartSeq"][1],
"CITESeq with mAb Data" %in% Dataset ~ ProbeBinding[Dataset == "CITESeq with mAb Data"][1],
TRUE ~ ProbeBinding))
#reattach the labels to the CITESeq data when a clonal group is represented in the CITESeq data or the mAb data
seuObj@meta.data$adj.uncorrectedProtoOmi <- seuObj@meta.data$adj.ProtoOmi
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")) %>%
select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation) %>%
filter(ProbeBinding != "Smartseq Only") %>%
group_by(clone_subgroup_id) %>%
mutate(Specificity = case_when("SmartSeq" %in% Dataset ~ ProbeBinding[Dataset == "SmartSeq"][1],
"CITESeq with mAb Data" %in% Dataset ~ ProbeBinding[Dataset == "CITESeq with mAb Data"][1],
TRUE ~ ProbeBinding))
seuObj@meta.data <- seuObj@meta.data %>%
mutate(adj.ProtoOmi = msdLabelled$Specificity[match(CELL, msdLabelled$Specificity)])
table(seuObj@meta.data$adj.uncorrectedProtoOmi, seuObj@meta.data$adj.ProtoOmi)
seuObj@meta.data$adj.ProtoOmi
View(msd)
View(msdLabelled)
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")) %>%
select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation) %>%
filter(ProbeBinding != "Smartseq Only") %>%
group_by(clone_subgroup_id) %>%
mutate(Specificity = case_when("SmartSeq" %in% Dataset ~ ProbeBinding[Dataset == "SmartSeq"][1],
"CITESeq with mAb Data" %in% Dataset ~ ProbeBinding[Dataset == "CITESeq with mAb Data"][1],
TRUE ~ ProbeBinding),
Overlap = length(unique(Dataset)) > 1)
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")) %>%
select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation) %>%
filter(ProbeBinding != "Smartseq Only") %>%
group_by(clone_subgroup_id) %>%
mutate(Specificity = case_when("SmartSeq" %in% Dataset ~ ProbeBinding[Dataset == "SmartSeq"][1],
"CITESeq with mAb Data" %in% Dataset ~ ProbeBinding[Dataset == "CITESeq with mAb Data"][1],
TRUE ~ ProbeBinding),
Overlap = length(unique(Dataset)) > 1,
Disagreement = length(unique(ProbeBinding)) > 1)
View(msdLabelled)
table(msdLabelled$Dataset)
table(msd$Dataset)
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only"))
View(msdLabelled)
msdLabelled <- msdLabelled %>% select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation)
View(msdLabelled)
View(msdLabelled)
table(msd$Dataset, is.na(msd$BindingPopulation))
table(msd$Dataset, is.na(msd$adj.ProtoOmi))
msd$CELL
View(msd)
table(msd$Dataset, msd$CELL %in% seuObj@meta.data$CELL)
check <- msd %>% filter(Dataset == "CITESeq")
View(check)
table(check$adj.ProtoOmi)
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$CELL ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$CELL)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA))
table(check2$adj.ProtoOmi)
table(check$CELL)
table(check$CELL %in% mab$cell)
mabLabelled$cell
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA))
table(is.na(check2$adj.ProtoOmi))
check2$CELL %in% seuObj@meta.data$CELL
table(check2$CELL %in% seuObj@meta.data$CELL)
seuObj@meta.data$adj.ProtoOmi
#read in seurat object
seuObj <- readRDS(file=here::here("04_Analysis", "data_objects", "04_probe", "CoVSeuratObj_VDJCSOGEX_SpecificitiesLabelled_CloneCorrected.rds"))
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA))
table(i.sna(check2$adj.ProtoOmi))
table(is.na(check2$adj.ProtoOmi))
table(check2$adj.ProtoOmi)
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$CELL ~ "CITESeq with mAb Data", TRUE ~ Dataset),)
table(check2$Dataset)
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$cell ~ "CITESeq with mAb Data", TRUE ~ Dataset))
table(check2$Dataset)
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$cell ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")))
check2 <- check %>% mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$cell ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only"))
table(check2$adj.ProtoOmi, check2$ProbeBinding)
msdLabelled <- msd %>%
group_by(clone_subgroup_id) %>%
mutate(adj.ProtoOmi = case_when(CELL %in% mabLabelled$cell ~ mabLabelled$ProbeBinding[match(CELL, mabLabelled$cell)],
CELL %in% seuObj@meta.data$CELL ~ seuObj@meta.data$adj.ProtoOmi[match(CELL, seuObj@meta.data$CELL)],
TRUE ~ NA),
Dataset = case_when(CELL %in% mabLabelled$cell ~ "CITESeq with mAb Data", TRUE ~ Dataset),
ProbeBinding = case_when(!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\+B\\+)|(Fully Cross-Reactive)") ~ "Proto+Omi+",
!is.na(BindingPopulation) & str_detect(BindingPopulation, "(P\\-B\\+)|(BA.1-specific)") ~ "Proto-Omi+",
is.na(BindingPopulation) & !is.na(adj.ProtoOmi) ~ adj.ProtoOmi,
TRUE ~ "Smartseq Only")) %>%
select(clone_subgroup_id, CELL, Dataset, ProbeBinding, BindingPopulation) %>%
filter(ProbeBinding != "Smartseq Only") %>%
group_by(clone_subgroup_id) %>%
mutate(Specificity = case_when("SmartSeq" %in% Dataset ~ ProbeBinding[Dataset == "SmartSeq"][1],
"CITESeq with mAb Data" %in% Dataset ~ ProbeBinding[Dataset == "CITESeq with mAb Data"][1],
TRUE ~ ProbeBinding),
Overlap = length(unique(Dataset)) > 1,
Disagreement = length(unique(ProbeBinding)) > 1)
View(msdLabelled)
check <- msdLabelled %>% filter(Disagreement == TRUE)
View(check)
View(check)
check2 <- check %>% filter(clone_subgroup_id %in% check$clone_subgroup_id[check$ProbeBinding == "Proto-Omi-"])
View(check2)
check2 <- check %>% filter(clone_subgroup_id %in% check$clone_subgroup_id[check$ProbeBinding == "Proto-Omi-" & check$Dataset == "CITESeq"])
