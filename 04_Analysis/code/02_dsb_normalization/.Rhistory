install.packages("dsb")
library(Seurat)
library(tidyverse)
library(sessioninfo)
library(dsb)
library(limma)
install.packages("limma")
sessionInfo()
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
library(Seurat)
library(here)
library(tidyverse)
library(sessioninfo)
library(dsb)
# Read in negative and positive objects as determined by hashtag demultiplexting. Load in good object which is after QC.
mergedNegObject <- readRDS(file = here::here("04_Analysis","data_objects","01_build_seurat","MergedSeuratObject_n.rds"))
mergedPosObject <- readRDS(file = here::here("04_Analysis","data_objects","01_build_seurat","MergedSeuratObject_p.rds"))
dim(mergedPosObject)
View(mergedPosObject)
View(mergedNegObject)
View(mergedPosObject)
######QC protein libraries########
prot.mult = (3*mad(mergedPosObject$log_nCount_Prot))
prot.upper = median(mergedPosObject$log_nCount_Prot) + prot.mult
mergedPosObject <- mergedPosObject %>% subset(subset = log_nCount_Prot < prot.upper)
dim(mergedPosObject)
View(mergedPosObject)
message("Dimensions of merged positive object after filtering out cells with prot counts 3x above MAD: ", dim(mergedPosObject))
message("Dimensions of merged positive object before setting upper prot limit: ", dim(mergedPosObject))
message("Dimensions of merged positive object before setting upper prot limit: ", dim(mergedPosObject)[1], " ", dim(mergedPosObject)[2])
message("Dimensions of merged positive object after filtering out cells with prot counts 3x above MAD: ", dim(mergedPosObject)[1], ", ", dim(mergedPosObject)[2])
isotypes = rownames(mergedPosObject@assays$Prot@counts)[grep("iso",rownames(mergedPosObject@assays$Prot@counts))]
normalized_dsb_matrix_sm = DSBNormalizeProtein(cell_protein_matrix = as.matrix(mergedPosObject@assays$Prot@counts),
empty_drop_matrix = as.matrix(A316.n@assays$Prot@counts), use.isotype.control = TRUE, isotype.control.name.vec = isotypes)
here()
mergedPosObject.dsb <-readRDS(file = here::here("04_Analysis","data_objects","02_dsb_normalization","MergedSeuratObject_positive_dsbnormalized.rds"))
mergedPosObject.dsb <-readRDS(file = here::here("04_Analysis","data_objects","02_dsb_normalization","MergedSeuratObject_positive_dsbnormalized.rds"))
mergedPosObject.dsb %>% count(Timepoint)
#Label Bcells in Meta data
mergedPosObject.dsb$Bcell <- mergedPosObject.dsb %>%
tidyseurat::join_features(features = c("P-CD19","P-CD3","P-CD14","P-CD56")) %>%
pivot_wider(names_from = .feature, values_from = .abundance_Prot) %>%
mutate(Bcell = if_else(`P-CD19` > 2.5 & `P-CD3` < 7.5 & `P-CD14` < 5 & `P-CD56` < 10, TRUE, FALSE)) %>%
pull("Bcell")
mergedPosObject.dsb@meta.data$Bcell
#run_info$bcells[5] <- table(mergedPosObject.dsb$Bcell)[2] #I really need to ask Abby about this :'(
message("Number of B cells per pool: \n",paste0(capture.output(table(mergedPosObject.dsb$Bcell)), collapse = "\n"))
#run_info$bcells[5] <- table(mergedPosObject.dsb$Bcell)[2] #I really need to ask Abby about this :'(
message("Number of B cells per pool: \n",paste0(capture.output(table(mergedPosObject.dsb$Bcell, mergedPosObject.dsb$orig.ident)), collapse = "\n"))
#run_info$bcells[5] <- table(mergedPosObject.dsb$Bcell)[2] #I really need to ask Abby about this :'(
message("Number of B cells total (TRUE indicates B-Cell status): \n",paste0(capture.output(table(mergedPosObject.dsb$Bcell)), collapse = "\n"))
message("Number of B cells per pool: \n",paste0(capture.output(table(mergedPosObject.dsb$Bcell, mergedPosObject.dsb$orig.ident)), collapse = "\n"))
#run_info$bcells[5] <- table(mergedPosObject.dsb$Bcell)[2] #I really need to ask Abby about this :'(
message("Number of B cells total (TRUE indicates B-Cell status): \n",paste0(capture.output(table(mergedPosObject.dsb$Bcell)), collapse = "\n"))
message("Number of B cells per pool: \n",paste0(capture.output(table(mergedPosObject.dsb$Bcell, mergedPosObject.dsb$orig.ident)), collapse = "\n"))
#set run number here:
runNumber <- 1
#coudln't find this .csv after running the previous s01_build_seurat script, so I'll leave this out for now
run_info <- read.csv(file = here::here("04_Analysis","data_objects","01_build_seurat","run_info_stats.csv"))
View(run_info)
#run names
sample_id = c("COV_09_19_2023_P1",
"COV_09_19_2023_P2",
"COV_09_19_2023_P3",
"COV_09_20_2023_P1",
"COV_09_20_2023_P2",
"COV_09_20_2023_P3",
"COV_09_21_2023_P1",
"COV_09_21_2023_P2",
"COV_09_26_2023_P1",
"COV_09_26_2023_P2",
"COV_09_27_2023_P1",
"COV_09_27_2023_P2",
"COV_09_28_2023_P1",
"COV_09_28_2023_P2",
"COV_09_28_2023_P3",
"COV_10_05_2023_P1",
"COV_10_06_2023_P1",
"COV_10_06_2023_P2"
)
sample_id <- sample_id[1:2]
#Seurat object list
seuratPosObjs <- list()
seuratNegObjs <- list()
######## Read in positive RDS objects
for(i in 1:length(sample_id)){
seuratPosObjs[i] <- readRDS(file = here::here("04_Analysis", "data_objects", "01_build_seurat", sample_id[i], paste0(sample_id[i], "_pos.rds")))
}
#set object names
for(i in 1:length(sample_id)){
names(seuratPosObjs)[i] <- sample_id[i]
}
######## Read in negative RDS objects
for(i in 1:length(sample_id)){
seuratNegObjs[i] <- readRDS(file = here::here("04_Analysis", "data_objects", "01_build_seurat", sample_id[i], paste0(sample_id[i], "_neg.rds")))
}
for(i in 1:length(sample_id)){
names(seuratNegObjs)[i] <- sample_id[i]
}
library(Seurat)
library(here)
library(tidyverse)
library(gridExtra)
library(sessioninfo)
library(tidyseurat)
#set run number here:
runNumber <- 1
#coudln't find this .csv after running the previous s01_build_seurat script, so I'll leave this out for now
run_info <- read.csv(file = here::here("04_Analysis","data_objects","01_build_seurat","run_info_stats.csv"))
run_info$Run[runNumber] <- runNumber
View(run_info)
#run names
sample_id = c("COV_09_19_2023_P1",
"COV_09_19_2023_P2",
"COV_09_19_2023_P3",
"COV_09_20_2023_P1",
"COV_09_20_2023_P2",
"COV_09_20_2023_P3",
"COV_09_21_2023_P1",
"COV_09_21_2023_P2",
"COV_09_26_2023_P1",
"COV_09_26_2023_P2",
"COV_09_27_2023_P1",
"COV_09_27_2023_P2",
"COV_09_28_2023_P1",
"COV_09_28_2023_P2",
"COV_09_28_2023_P3",
"COV_10_05_2023_P1",
"COV_10_06_2023_P1",
"COV_10_06_2023_P2"
)
#Seurat object list
seuratPosObjs <- list()
seuratNegObjs <- list()
######## Read in positive RDS objects
for(i in 1:length(sample_id)){
seuratPosObjs[i] <- readRDS(file = here::here("04_Analysis", "data_objects", "01_build_seurat", sample_id[i], paste0(sample_id[i], "_pos.rds")))
}
#set object names
for(i in 1:length(sample_id)){
names(seuratPosObjs)[i] <- sample_id[i]
}
######## Read in negative RDS objects
for(i in 1:length(sample_id)){
seuratNegObjs[i] <- readRDS(file = here::here("04_Analysis", "data_objects", "01_build_seurat", sample_id[i], paste0(sample_id[i], "_neg.rds")))
}
for(i in 1:length(sample_id)){
names(seuratNegObjs)[i] <- sample_id[i]
}
#merge objects into one and save
#you can't coerce multiple items from a list using double brackets, which is the only way to
#correctly access the data. As a result, I'll need to simply input it myself (ugh)
mergedPosObjs <- sp::merge(seuratPosObjs[[1]], y = c(seuratPosObjs[[2]], seuratPosObjs[[3]],
seuratPosObjs[[4]], seuratPosObjs[[5]],
seuratPosObjs[[6]], seuratPosObjs[[7]],
seuratPosObjs[[8]], seuratPosObjs[[9]],
seuratPosObjs[[10]], seuratPosObjs[[11]],
seuratPosObjs[[12]], seuratPosObjs[[13]],
seuratPosObjs[[14]], seuratPosObjs[[15]],
seuratPosObjs[[16]], seuratPosObjs[[17]],
seuratPosObjs[[18]]), add.cell.ids = c(sample_id))
message("Counts for each pool in merged positive Seurat object: \n",paste0(capture.output(plyr::count(mergedPosObjs@meta.data$orig.ident)), collapse = "\n"))
#merge into one object and save for negatives
mergedNegObjs <- merge(seuratNegObjs[[1]], y = c(seuratNegObjs[[2]], seuratNegObjs[[3]],
seuratNegObjs[[4]], seuratNegObjs[[5]],
seuratNegObjs[[6]], seuratNegObjs[[7]],
seuratNegObjs[[8]], seuratNegObjs[[9]],
seuratNegObjs[[10]], seuratNegObjs[[11]],
seuratNegObjs[[12]], seuratNegObjs[[13]],
seuratNegObjs[[14]], seuratNegObjs[[15]],
seuratNegObjs[[16]], seuratNegObjs[[17]],
seuratNegObjs[[18]]), add.cell.ids = c(sample_id))
#we can add timepoints to our objects now! every hashtag defines the same timepoint regardless of sample number
#HT 01 and 05 were day 1, Ht 02 and 06 were day 15, hashtag 03 and 07 were day 90, and hashtag 04 and 08 were day 180
mergedPosObjs <- mergedPosObjs%>%mutate(Timepoint = case_when(MULTI_ID %in% c("HTO-0251","HTO-0255") ~ "Day 0",
MULTI_ID %in% c("HTO-0252", "HTO-0256")  ~ "Day 15",
MULTI_ID %in% c("HTO-0253", "HTO-0257")  ~ "Day 90",
MULTI_ID %in% c("HTO-0254", "HTO-0258")  ~ "Day 180",
TRUE ~ "Error in Hashtag Call"
))
#add sample names now too
#define which half of the hashtags a donor was included in for a given pool
firstHalf <- c("HTO-0251", "HTO-0252", "HTO-0253", "HTO-0254")
lastHalf <- c("HTO-0255", "HTO-0256", "HTO-0257", "HTO-0258")
#add names
mergedPosObjs <- mergedPosObjs %>% mutate(Subject = case_when(orig.ident %in% c("COV_09_19_2023_P1") & MULTI_ID %in% firstHalf ~ "5457484948",
orig.ident %in% c("COV_09_19_2023_P1") & MULTI_ID %in% lastHalf ~ "5048574848",
orig.ident %in% c("COV_09_19_2023_P2","COV_09_19_2023_P3") & MULTI_ID %in% firstHalf ~ "4951574848",
orig.ident %in% c("COV_09_19_2023_P2","COV_09_19_2023_P3") & MULTI_ID %in% lastHalf ~ "5357484948",
orig.ident %in% c("COV_09_20_2023_P1") & MULTI_ID %in% firstHalf ~ "4954554848",
orig.ident %in% c("COV_09_20_2023_P1") & MULTI_ID %in% lastHalf ~ "4957484948",
orig.ident %in% c("COV_09_20_2023_P2","COV_09_20_2023_P3") & MULTI_ID %in% firstHalf ~ "4848544848",
orig.ident %in% c("COV_09_20_2023_P2","COV_09_20_2023_P3") & MULTI_ID %in% lastHalf ~ "5053564848",
orig.ident %in% c("COV_09_21_2023_P1") & MULTI_ID %in% firstHalf ~ "4955534848",
orig.ident %in% c("COV_09_21_2023_P1") & MULTI_ID %in% lastHalf ~ "4957564848",
orig.ident %in% c("COV_09_21_2023_P2") & MULTI_ID %in% firstHalf ~ "4953494948",
orig.ident %in% c("COV_09_21_2023_P2") & MULTI_ID %in% lastHalf ~ "5553564848",
orig.ident %in% c("COV_09_26_2023_P1") & MULTI_ID %in% firstHalf ~ "5150564848",
orig.ident %in% c("COV_09_26_2023_P1") & MULTI_ID %in% lastHalf ~ "5557544848",
orig.ident %in% c("COV_09_26_2023_P2") & MULTI_ID %in% firstHalf ~ "5050484948",
orig.ident %in% c("COV_09_26_2023_P2") & MULTI_ID %in% lastHalf ~ "5048544848",
orig.ident %in% c("COV_09_27_2023_P1") & MULTI_ID %in% firstHalf ~ "5750564848",
orig.ident %in% c("COV_09_27_2023_P1") & MULTI_ID %in% lastHalf ~ "5755544848",
orig.ident %in% c("COV_09_27_2023_P2") & MULTI_ID %in% firstHalf ~ "4950544848",
orig.ident %in% c("COV_09_27_2023_P2") & MULTI_ID %in% lastHalf ~ "5249544848",
orig.ident %in% c("COV_09_28_2023_P1", "COV_09_28_2023_P3") & MULTI_ID %in% firstHalf ~ "5054574848",
orig.ident %in% c("COV_09_28_2023_P1", "COV_09_28_2023_P3") & MULTI_ID %in% lastHalf ~ "5456544848",
orig.ident %in% c("COV_09_28_2023_P2") & MULTI_ID %in% firstHalf ~ "5356534848",
orig.ident %in% c("COV_09_28_2023_P2") & MULTI_ID %in% lastHalf ~ "5556484948",
orig.ident %in% c("COV_10_05_2023_P1") & MULTI_ID %in% firstHalf ~ "5553554848",
orig.ident %in% c("COV_10_06_2023_P1") & MULTI_ID %in% firstHalf ~ "5657574848",
orig.ident %in% c("COV_10_06_2023_P2") & MULTI_ID %in% firstHalf ~ "4856554848",
orig.ident %in% c("COV_10_06_2023_P2") & MULTI_ID %in% lastHalf ~ "5653544848",
TRUE ~ "Error in labelling donor"
))
#Now let's add booster annotation:
o <- c("5048574848",
"4957484948",
"4848544848",
"4957564848")
p <- c("5457484948",
"4951574848",
"4954554848",
"4955534848",
"5557544848")
op <- c("5357484948",
"5053564848",
"4953494948",
"5553564848",
"5150564848")
oi <- c("5050484948",
"5750564848",
"5755544848",
"5054574848",
"5456544848")
pi <- c("5048544848",
"4950544848",
"5249544848",
"5356534848",
"5556484948")
opi <- c("5553554848",
"5657574848",
"4856554848",
"5653544848")
#add the annotation
mergedPosObjs <- mergedPosObjs%>%mutate(Booster = case_when(Subject %in% c(o, oi) ~ "Omicron",
Subject %in% c(p, pi) ~ "Prototype",
Subject %in% c(op, opi) ~ "Omicron And Prototype",
TRUE ~ "Error in annotating booster dose"))
mergedPosObjs <- mergedPosObjs%>%mutate(Infection = case_when(Subject %in% c(oi, pi, opi) ~ "Y",
Subject %in% c(o, p, op) ~ "N",
TRUE ~ "Error in labelling infection status"
))
message("Counts for cells per subject: \n",paste0(capture.output(plyr::count(mergedPosObjs@meta.data$Subject)), collapse = "\n"))
message("Counts for cells per timepoint for all pools: \n",paste0(capture.output(plyr::count(mergedPosObjs@meta.data$Timepoint)), collapse = "\n"))
message("Counts for cells per booster dose: \n",paste0(capture.output(plyr::count(mergedPosObjs@meta.data$Booster)), collapse = "\n"))
message("Counts for cells by infection status: \n",paste0(capture.output(plyr::count(mergedPosObjs@meta.data$Infection)), collapse = "\n"))
#edit run info file
run_info$neg.drops[runNumber] <- dim(mergedNegObjs)[2]
run_info$wt.cells[runNumber] <- dim(mergedPosObjs)[2]
View(run_info)
library(vroom)
# helpful function combined <- AddMetaData(combined, metadata = all_cln_collapsed)
runNum <- 1
run_info <- read.csv(file = here::here("04_Analysis","data_objects","01_build_seurat","run_info_stats.csv"))
####### Add VDJ information ###############
#Read in all annotated vdj from 10X and combine them
vdjData <- vroom(paste0("03_Immcantation/",list.files(path = here::here("03_Immcantation"),pattern = "*annotations.csv")))
here()
####### Add VDJ information ###############
#Read in all annotated vdj from 10X and combine them
vdjData <- vroom(paste0(here::here("03_Immcantation"), "/",list.files(path = here::here("03_Immcantation"),pattern = "*annotations.csv")))
View(vdjData)
View(vdjData)
head(vdjData[,-1])
head(vdjData)
####### Add VDJ information ###############
#Read in all annotated vdj from 10X and combine them
vdjData <- vroom(paste0(here::here("03_Immcantation"), "/",list.files(path = here::here("03_Immcantation"),pattern = "*annotations.csv")))[,-1]
View(vdjData)
dim(vdjData)
#using VDJpair function to select only barcodes with 1 HC paired with 1 LC#
files <- vdjData
files <- list(files)
temp.file <- list()
paired.files <- list()
i = 1
temp.file <- files[[i]] %>% dplyr::select(-is_cell, -contig_id, -high_confidence, -full_length, -productive, -raw_clonotype_id, -raw_consensus_id)
temp.file.h <- temp.file %>% dplyr::filter(chain == "IGH")
#temp.file.k <- temp.file %>% dplyr::filter(chain == "IGK")
temp.file.l <- temp.file %>% dplyr::filter(chain %in% c("IGL","IGK"))
#remove duplicate barcodes
temp.file.h <- temp.file.h[!duplicated(temp.file.h$barcode),]
#temp.file.k <- temp.file.k[!duplicated(temp.file.k$barcode),]
temp.file.l <- temp.file.l[!duplicated(temp.file.l$barcode),]
#temp.HK <- dplyr::left_join(temp.file.h, temp.file.k, by = "barcode")
temp.HL <- dplyr::left_join(temp.file.h, temp.file.l, by = "barcode")
my.colnames <- c("barcode","length", "chain","v_gene","d_gene",
"j_gene","c_gene","fwr1","fwr1_nt","cdr1","cdr1_nt","fwr2",
"fwr2_nt","cdr2","cdr2_nt","fwr3","fwr3_nt","cdr3",
"cdr3_nt","fwr4","fwr4_nt","reads" ,"umis", "exact_subclonotype_id")
#colnames(temp.HK) <- c(my.colnames, paste(my.colnames[-1], ".l", sep = ""))
colnames(temp.HL) <- c(my.colnames, paste(my.colnames[-1], ".l", sep = ""))
#temp.merge <- rbind(temp.HK, temp.HL)
temp.HL <- temp.HL %>% distinct(barcode, .keep_all = TRUE)
temp.merge <- temp.HL
#temp.merge <- temp.merge[!(temp.merge$barcode %in% temp.merge[duplicated(temp.merge$barcode),]$barcode),]
idents = NULL
if(length(idents) == length(files)) {
temp.merge$orig <- paste(idents[i])
} else {
temp.merge$orig <- paste("file", i, sep = "_")
}
View(temp.merge)
paired.files[[i]] <- temp.merge
rtrn <- (do.call(rbind, paired.files))
All.M.vdj <- rtrn
#run_info[nrow(run_info)+1,] <- NA
run_info$vdj.ann.pair[runNum] <- dim(All.M.vdj)[1]
View(run_info)
All.M.vdj$CELL <- All.M.vdj$barcode
library(Seurat)
library(here)
library(tidyverse)
library(sessioninfo)
library(dsb)
# Read in negative and positive objects as determined by hashtag demultiplexting. Load in good object which is after QC.
mergedNegObject <- readRDS(file = here::here("04_Analysis","data_objects","01_build_seurat","MergedSeuratObject_n.rds"))
mergedPosObject <- readRDS(file = here::here("04_Analysis","data_objects","01_build_seurat","MergedSeuratObject_p.rds"))
View(mergedPosObject)
