###redefine binding
df <- totaldf %>%
mutate(`Omicron BA.1` = ifelse(`Omicron BA.1.old` < `Omicron BA.1.new`, `Omicron BA.1.old`, `Omicron BA.1.new`)) %>%
filter(`Omicron BA.1` >= 20000) %>%
mutate(PrototypeBinding = Prototype >= (`Omicron BA.1.old` * 0.2),
BA1Binding = `Omicron BA.1` >= 20000,
BA2Binding = `Omicron BA.2` >= (`Omicron BA.1.new` * 0.2),
BA45Binding = `Omicron BA 45` >= (`Omicron BA.1.new` * 0.2),
XBBBinding = `Omicron XBB` >= (`Omicron BA.1.old` * 0.2),
JN1Binding = `JN1` >= (`Omicron BA.1.old` * 0.2),
KP2Binding = `KP.2` >= (`Omicron BA.1.new` * 0.2),
`Infection Status` = factor(`Infection Status`, levels = c("Uninfected", "Infected")),
CorrectedBoost = factor(CorrectedBoost, levels = c("Prototype", "BA.1")),
`Donor ID` = donor_id)
#df with smartseq
citeRat <- read_xlsx(here::here("01_raw-data", "CombinedMSD_Neut_Smartseq_OverlappingCITESeq.xlsx"))
####compare SHM
citeRat <- citeRat %>% filter(!is.na(IgGQuant))
ratpigSHM <- observedMutations(citeRat, sequenceColumn = "sequence_alignment",
germlineColumn = "germline_alignment",
regionDefinition = IMGT_V_BY_REGIONS, combine = TRUE, frequency = TRUE)
ratpigSHM2 <- ratpigSHM %>% mutate(DeNovo = BindingPopulation %in% c("BA.1-specific", "P-B+X+J+", "P-B+X+J-", "P-B+X-J+", "P-B+X-J-")) %>%
filter(!(CorrectedBoost == "Prototype" & `Infection Status` == "Uninfected" & DeNovo))
ggplot(ratpigSHM2, aes(x= DeNovo, y= mu_freq*100))+
geom_violin(aes(fill= DeNovo))+
geom_boxplot(aes(fill = DeNovo), width = 0.2)+
ylab("VH Mutation Frequency")+
scale_fill_manual(values = c("TRUE" = "#C5A586", "FALSE" = "#EEE9E3"))+
scale_x_discrete(limits = c("FALSE", "TRUE"), labels = c("Prototype+BA.1+", "Prototype-BA.1+"))+
theme_classic()+
theme(text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust= 1, vjust = 1),
axis.title.x = element_blank(),
legend.position = "none")
ggplot(ratpigSHM2, aes(x= DeNovo, y= mu_freq*100))+
geom_violin(aes(fill= DeNovo))+
geom_boxplot(aes(fill = DeNovo), width = 0.2)+
ylab("VH Mutation Frequency")+
scale_fill_manual(values = c("TRUE" = "#C5A586", "FALSE" = "#EEE9E3"))+
scale_x_discrete(limits = c("FALSE", "TRUE"), labels = c("Prototype+BA.1+", "Prototype-BA.1+"))+
theme_classic()+
theme(text = element_text(size = 14, color = "black"),
axis.text.x = element_text(angle = 45, hjust= 1, vjust = 1, color = "black"),
axis.title.x = element_blank(),
legend.position = "none")
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "Denovo_Vs_Recall_SHM.svg"), width = 3, height = 4)
ggplot(ratpigSHM2, aes(x= DeNovo, y= mu_freq*100))+
geom_violin(aes(fill= DeNovo))+
geom_boxplot(aes(fill = DeNovo), width = 0.2)+
ylab("% VH Mutation")+
scale_fill_manual(values = c("TRUE" = "#C5A586", "FALSE" = "#EEE9E3"))+
scale_x_discrete(limits = c("FALSE", "TRUE"), labels = c("Prototype+BA.1+", "Prototype-BA.1+"))+
theme_classic()+
theme(text = element_text(size = 14, color = "black"),
axis.text.x = element_text(angle = 45, hjust= 1, vjust = 1, color = "black"),
axis.title.x = element_blank(),
legend.position = "none")
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "Denovo_Vs_Recall_SHM.svg"), width = 3, height = 4)
ggplot(ratpigSHM2, aes(x= DeNovo, y= mu_freq*100))+
geom_violin(aes(fill= DeNovo))+
geom_boxplot(aes(fill = DeNovo), width = 0.2)+
ylab("% VH Mutation")+
scale_fill_manual(values = c("TRUE" = "#C5A586", "FALSE" = "#EEE9E3"))+
scale_x_discrete(limits = c("FALSE", "TRUE"), labels = c("Prototype+BA.1+", "Prototype-BA.1+"))+
theme_classic()+
theme(text = element_text(size = 14, color = "black"),
axis.text.x = element_text(size = 16, angle = 45, hjust= 1, vjust = 1, color = "black"),
axis.title.x = element_blank(),
legend.position = "none")
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "Denovo_Vs_Recall_SHM.svg"), width = 3, height = 4)
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "Denovo_Vs_Recall_SHM.svg"), width = 3, height = 4.1)
#####
#finally, plot binding vs neut
data <- df %>% mutate(
NeutsPro = stringr::str_count(NeutralizingPopulations, "P\\+"),
NeutsBA1 = stringr::str_count(NeutralizingPopulations, "B\\+"),
NeutsJN1 = stringr::str_count(NeutralizingPopulations, "J\\+"),
NeutsXBB = stringr::str_count(NeutralizingPopulations, "X\\+")
)
#compare binding
bindingdf <- data  |>
select(`Donor ID`, CorrectedBoost, `Infection Status`, `RATPIg Well`, PrototypeBinding, BA1Binding, BA2Binding, BA45Binding, XBBBinding, JN1Binding, KP2Binding) %>%
pivot_longer(cols = contains("Binding"), names_to = "Antigen", values_to = "Yes?") %>%
group_by(CorrectedBoost, `Infection Status`, `Donor ID`, Antigen, `Yes?`) %>%
summarize(n =n ()) %>%
mutate(proportion = n / sum(n)) %>%
filter(`Yes?`) %>%
mutate(Antigens = factor(Antigen, levels = c("PrototypeBinding", "BA1Binding", "BA2Binding", "BA45Binding", "XBBBinding", "JN1Binding", "KP2Binding")))
ggplot(bindingdf, aes(x = factor(Antigen), y = proportion, shape = `Infection Status`))+
geom_point(aes(fill = CorrectedBoost, group = `Infection Status`, color =CorrectedBoost), position = position_jitterdodge(jitter.width = 0.05, dodge.width = 0.55), size = 2, stroke = 1)+
ylim(0,1)+
theme_classic()+
#scale_fill_manual(values = c("darkslateblue", "dodgerblue"))+
scale_fill_manual(values = boostColors)+
scale_color_manual(values = boostColors)+
ggtitle("Binding")+
scale_x_discrete("Antigen", labels = c("PrototypeBinding" = "Prototype",
"BA1Binding" = "BA.1",
"BA2Binding" = "BA.2",
"BA45Binding" = "BA.4/5",
"XBBBinding" = "XBB.1.5",
"JN1Binding" = "JN.1",
"KP2Binding" = "KP.2"),
limits = c("PrototypeBinding", "BA1Binding", "BA2Binding", "BA45Binding", "XBBBinding",
"JN1Binding", "KP2Binding"))+
scale_shape_manual(values = c("Uninfected" = 21, "Infected" = 1))+
ylab("Proportion")+
guides(fill = guide_legend(override.aes = list(shape=21)),
shape = guide_legend(override.aes = list(fill = "black")))+
theme(text = element_text(size = 14, color = "black"),
legend.key.size = unit(0.3, "lines"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 14, color = "black"),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1, vjust = 1, color = "black"),
legend.position = "none",
axis.title.x = element_blank())
ggplot(bindingdf, aes(x = factor(Antigen), y = proportion, shape = `Infection Status`))+
geom_point(aes(fill = CorrectedBoost, group = `Infection Status`, color =CorrectedBoost), position = position_jitterdodge(jitter.width = 0.05, dodge.width = 0.55), size = 2, stroke = 1)+
ylim(0,1)+
theme_classic()+
#scale_fill_manual(values = c("darkslateblue", "dodgerblue"))+
scale_fill_manual(values = boostColors)+
scale_color_manual(values = boostColors)+
ggtitle("Binding")+
scale_x_discrete("Antigen", labels = c("PrototypeBinding" = "Prototype",
"BA1Binding" = "BA.1",
"BA2Binding" = "BA.2",
"BA45Binding" = "BA.4/5",
"XBBBinding" = "XBB.1.5",
"JN1Binding" = "JN.1",
"KP2Binding" = "KP.2"),
limits = c("PrototypeBinding", "BA1Binding", "BA2Binding", "BA45Binding", "XBBBinding",
"JN1Binding", "KP2Binding"))+
scale_shape_manual(values = c("Uninfected" = 21, "Infected" = 1))+
ylab("Proportion")+
guides(fill = guide_legend(override.aes = list(shape=21)),
shape = guide_legend(override.aes = list(fill = "black")))+
theme(text = element_text(size = 14, color = "black"),
legend.key.size = unit(0.3, "lines"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 14, color = "black"),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1, vjust = 1, color = "black"),
legend.position = "none",
axis.title.x = element_blank())
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "BindingComparison_byInfection.svg"), width = 5, height = 4)
#now neutralization
neutsdf <- data |>
select(`Donor ID`, CorrectedBoost, `Infection Status`, `RATPIg Well`, NeutsPro, NeutsBA1, NeutsXBB, NeutsJN1) |>
pivot_longer(cols = contains("Neuts"), names_to = "Antigen", values_to = "Yes?") |>
group_by(CorrectedBoost, `Infection Status`, `Donor ID`, Antigen, `Yes?`) |>
summarize(n =n ()) |>
mutate(proportion = n / sum(n)) |>
filter(`Yes?` == 1) |>
mutate(Antigens = case_when(Antigen == "NeutsPro" ~ "Prototype",
Antigen == "NeutsBA1" ~ "BA.1",
Antigen == "NeutsXBB" ~ "XBB.1.5",
Antigen == "NeutsJN1" ~ "JN.1"),
Antigens = factor(Antigens, levels = c("Prototype", "BA.1", "XBB.1.5", "JN.1"))) |> #factor in mutate so you don't need to specify that dataframe
group_by(CorrectedBoost, `Infection Status`) |> #
complete(`Donor ID`, Antigens, fill = list(proportion = 0))
ggplot(neutsdf, aes(x = factor(Antigens), y = proportion, shape = `Infection Status`))+
geom_point(aes(fill = CorrectedBoost, group = `Infection Status`, color = CorrectedBoost), position = position_jitterdodge(jitter.width = 0.05, dodge.width = 0.55), size = 2, stroke = 1)+
ylim(0,1)+
theme_classic()+
#scale_fill_manual(values = c("darkslateblue", "dodgerblue"))+
scale_fill_manual(values = boostColors)+
scale_color_manual(values = boostColors)+
ggtitle("Neutralization")+
# scale_x_discrete("Antigens", labels = c("NeutsPro" = "Prototype",
#                                        "NeutsBA1" = "BA.1",
#                                        "NeutsXBB" = "XBB.1.5",
#                                        "NeutsJN1" = "JN.1"),
#                  limits = c("NeutsPro", "NeutsBA1", "NeutsXBB", "NeutsJN1"))+
scale_shape_manual(values = c("Uninfected" = 21, "Infected" = 1))+
ylab("Proportion")+
guides(fill = guide_legend(override.aes = list(shape=21), title = "Boost"),
shape = guide_legend(override.aes = list(fill = "black")))+
theme(text = element_text(size = 14, color = "black"),
legend.key.size = unit(0.3, "lines"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 14, color = "black"),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1, vjust = 1, color = "black"),
axis.title.x = element_blank())
ggplot(neutsdf, aes(x = factor(Antigens), y = proportion, shape = `Infection Status`))+
geom_point(aes(fill = CorrectedBoost, group = `Infection Status`, color = CorrectedBoost), position = position_jitterdodge(jitter.width = 0.05, dodge.width = 0.55), size = 2, stroke = 1)+
ylim(0,1)+
theme_classic()+
#scale_fill_manual(values = c("darkslateblue", "dodgerblue"))+
scale_fill_manual(values = boostColors)+
scale_color_manual(values = boostColors)+
ggtitle("Neutralization")+
# scale_x_discrete("Antigens", labels = c("NeutsPro" = "Prototype",
#                                        "NeutsBA1" = "BA.1",
#                                        "NeutsXBB" = "XBB.1.5",
#                                        "NeutsJN1" = "JN.1"),
#                  limits = c("NeutsPro", "NeutsBA1", "NeutsXBB", "NeutsJN1"))+
scale_shape_manual(values = c("Uninfected" = 21, "Infected" = 1))+
ylab("Proportion")+
guides(fill = guide_legend(override.aes = list(shape=21), title = "Boost"),
shape = guide_legend(override.aes = list(fill = "black")))+
theme(text = element_text(size = 14, color = "black"),
legend.key.size = unit(0.3, "lines"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 14, color = "black"),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1, vjust = 1, color = "black"),
axis.title.x = element_blank())
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "NeutsComparison_ByInfection.svg"),width = 5, height = 4)
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "NeutsComparison_ByInfection.svg"),width = 5, height = 4.1)
ggplot(bindingdf, aes(x = factor(Antigen), y = proportion, shape = `Infection Status`))+
geom_point(aes(fill = CorrectedBoost, group = `Infection Status`, color =CorrectedBoost), position = position_jitterdodge(jitter.width = 0.05, dodge.width = 0.55), size = 2, stroke = 1)+
ylim(0,1)+
theme_classic()+
#scale_fill_manual(values = c("darkslateblue", "dodgerblue"))+
scale_fill_manual(values = boostColors)+
scale_color_manual(values = boostColors)+
ggtitle("Binding")+
scale_x_discrete("Antigen", labels = c("PrototypeBinding" = "Prototype",
"BA1Binding" = "BA.1",
"BA2Binding" = "BA.2",
"BA45Binding" = "BA.4/5",
"XBBBinding" = "XBB.1.5",
"JN1Binding" = "JN.1",
"KP2Binding" = "KP.2"),
limits = c("PrototypeBinding", "BA1Binding", "BA2Binding", "BA45Binding", "XBBBinding",
"JN1Binding", "KP2Binding"))+
scale_shape_manual(values = c("Uninfected" = 21, "Infected" = 1))+
ylab("Proportion")+
guides(fill = guide_legend(override.aes = list(shape=21)),
shape = guide_legend(override.aes = list(fill = "black")))+
theme(text = element_text(size = 14, color = "black"),
legend.key.size = unit(0.3, "lines"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 14, color = "black"),
axis.text.x = element_text(size = 16, angle = 45, hjust = 1, vjust = 1, color = "black"),
legend.position = "none",
axis.title.x = element_blank())
ggsave(here::here("04_Analysis", "plots", "paperfigures", "keystone", "BindingComparison_byInfection.svg"), width = 5, height = 4.1)
library(Seurat)
library(dplyr)
library(tidyseurat)
library(ggplot2)
library(ggalluvial)
library(here)
library(stringr)
library(writexl)
#load in the data
seuObjNaive <- readRDS(file = here::here("04_Analysis", "data_objects", "06_additional_demultiplexing", "covObj_clustered_demultiplexed.rds")) %>%
mutate(OfficialBooster = case_when(Booster == "Omicron" ~ "Omicron BA.1 mRNA",
Booster == "Omicron And Prototype" ~ "Prototype + Omicron BA.1 mRNA",
Booster == "Prototype" ~ "Prototype mRNA"),
ClusterLabel = factor(ClusterLabel, levels = c("Atypical", "Acute Activated", "Intermediate", "Resting IgG", "Resting IgA", "Plasmablast-like", "Naive")),
Booster = str_replace(Booster, "Omicron", "BA.1"),
OfficialBooster = factor(OfficialBooster, levels = c("Prototype mRNA", "Prototype + Omicron BA.1 mRNA", "Omicron BA.1 mRNA")),
Booster = factor(Booster, levels = c("Prototype", "BA.1 And Prototype", "BA.1")),
Boost = case_when(Booster == "BA.1 And Prototype" ~ "Prototype/BA.1",
TRUE ~ Booster),
Boost = factor(Boost, levels = c("Prototype", "Prototype/BA.1", "BA.1")))
seuObj <- seuObjNaive %>% filter(ClusterLabel != "Naive", ClusterLabel != "Plasmablast-like")
df <- seuObj@meta.data %>% filter(adj.ProtoOmi != "Proto-Omi+")
df$OfficialInfection <- ifelse(df$Infection == "Y", "Infected", "Uninfected")
df$OfficialInfection <- factor(df$OfficialInfection, levels = c("Uninfected",
"Infected"))
df$InfectionRange <- ifelse(is.na(df$InfectionRange), "Uninfected", df$InfectionRange)
#set colors
allColors3 <- c("Prototype" = "#FBB042",
"BA.1 And Prototype" = "#1D75BC",
"BA.1" = "#2AB673")
allColors <- c("Omicron BA.1 mRNA" = "#2AB673",
"Prototype + Omicron BA.1 mRNA" = "#1D75BC",
"Prototype mRNA" = "#FBB042")
allColors2 <- c("Omicron" = "#2AB673",
"Omicron And Prototype" = "#1D75BC",
"Prototype" = "#FBB042")
allColors4 <- c("BA.1" = "#2AB673",
"Prototype/BA.1" = "#1D75BC",
"Prototype" = "#FBB042")
shortColors <- c("Atypical" = "#D53E4F", #based on RColorBrewer Spectral Palette
#"Acute Activated" = "#F46D43",
"Acute Activated" = "#f08665",
"Intermediate" = "#E6F598",
"Resting IgG" = "limegreen",
"Resting IgA" = "#3288BD",
"Plasmablast-like" = "#6f2da8",
"Naive" = "white")
naiveDF <- seuObjNaive@meta.data
embeddings <- as.data.frame(Embeddings(seuObjNaive,reduction = "harmony.wnn.umap"))
naiveDF$UMAP_1 <- embeddings$harmonywnnUMAP_1[match(rownames(embeddings), rownames(naiveDF))]
naiveDF$UMAP_2 <- embeddings$harmonywnnUMAP_2[match(rownames(embeddings), rownames(naiveDF))]
#create table
table(naiveDF$Booster, naiveDF$Timepoint)
######
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.001)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
dev.off()
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.01)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
library(Seurat)
library(dplyr)
library(tidyseurat)
library(ggplot2)
library(ggalluvial)
library(here)
library(stringr)
library(writexl)
#load in the data
seuObjNaive <- readRDS(file = here::here("04_Analysis", "data_objects", "06_additional_demultiplexing", "covObj_clustered_demultiplexed.rds")) %>%
mutate(OfficialBooster = case_when(Booster == "Omicron" ~ "Omicron BA.1 mRNA",
Booster == "Omicron And Prototype" ~ "Prototype + Omicron BA.1 mRNA",
Booster == "Prototype" ~ "Prototype mRNA"),
ClusterLabel = factor(ClusterLabel, levels = c("Atypical", "Acute Activated", "Intermediate", "Resting IgG", "Resting IgA", "Plasmablast-like", "Naive")),
Booster = str_replace(Booster, "Omicron", "BA.1"),
OfficialBooster = factor(OfficialBooster, levels = c("Prototype mRNA", "Prototype + Omicron BA.1 mRNA", "Omicron BA.1 mRNA")),
Booster = factor(Booster, levels = c("Prototype", "BA.1 And Prototype", "BA.1")),
Boost = case_when(Booster == "BA.1 And Prototype" ~ "Prototype/BA.1",
TRUE ~ Booster),
Boost = factor(Boost, levels = c("Prototype", "Prototype/BA.1", "BA.1")))
seuObj <- seuObjNaive %>% filter(ClusterLabel != "Naive", ClusterLabel != "Plasmablast-like")
df <- seuObj@meta.data %>% filter(adj.ProtoOmi != "Proto-Omi+")
df$OfficialInfection <- ifelse(df$Infection == "Y", "Infected", "Uninfected")
df$OfficialInfection <- factor(df$OfficialInfection, levels = c("Uninfected",
"Infected"))
df$InfectionRange <- ifelse(is.na(df$InfectionRange), "Uninfected", df$InfectionRange)
#set colors
allColors3 <- c("Prototype" = "#FBB042",
"BA.1 And Prototype" = "#1D75BC",
"BA.1" = "#2AB673")
allColors <- c("Omicron BA.1 mRNA" = "#2AB673",
"Prototype + Omicron BA.1 mRNA" = "#1D75BC",
"Prototype mRNA" = "#FBB042")
allColors2 <- c("Omicron" = "#2AB673",
"Omicron And Prototype" = "#1D75BC",
"Prototype" = "#FBB042")
allColors4 <- c("BA.1" = "#2AB673",
"Prototype/BA.1" = "#1D75BC",
"Prototype" = "#FBB042")
shortColors <- c("Atypical" = "#D53E4F", #based on RColorBrewer Spectral Palette
#"Acute Activated" = "#F46D43",
"Acute Activated" = "#f08665",
"Intermediate" = "#E6F598",
"Resting IgG" = "limegreen",
"Resting IgA" = "#3288BD",
"Plasmablast-like" = "#6f2da8",
"Naive" = "white")
naiveDF <- seuObjNaive@meta.data
embeddings <- as.data.frame(Embeddings(seuObjNaive,reduction = "harmony.wnn.umap"))
naiveDF$UMAP_1 <- embeddings$harmonywnnUMAP_1[match(rownames(embeddings), rownames(naiveDF))]
naiveDF$UMAP_2 <- embeddings$harmonywnnUMAP_2[match(rownames(embeddings), rownames(naiveDF))]
#create table
table(naiveDF$Booster, naiveDF$Timepoint)
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.001)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.1)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 3)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.0000001)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.00000001)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.00001)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.001)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.01)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.1)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.05)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.02)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.009)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
######
#plot UMAP
ggplot(naiveDF, aes(x = UMAP_1, y= UMAP_2, fill = ClusterLabel))+
geom_point(size = 0.9, shape=21, stroke = 0.015)+
scale_fill_manual(values = shortColors)+
theme_void()+
guides(fill = guide_legend(override.aes = list(size = 4)))+
theme(legend.text = element_text(size = 14),
legend.title = element_blank(),
legend.key.spacing.y = unit(0.1, "line"))
ggsave(filename = here::here("04_Analysis", "plots", "paperfigures", "keystone", "UMAP.svg"),width = 4.5, height = 3.8, units = "in")
